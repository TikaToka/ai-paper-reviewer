[{"content": "| Algorithm | Train Batch Size | Rollout N | KL Coef | Max Response Len |\n|---|---|---|---|---|\n| REINFORCE++ | 8 | 8 | 0.001 | 4096 |", "caption": "Table 1: Important Training Parameters", "description": "\ud45c 1\uc740 \ub17c\ubb38\uc758 2.4\uc808(\ud6c8\ub828 \uc77c\uc815)\uc5d0\uc11c Logic-RL \ubaa8\ub378 \ud6c8\ub828\uc5d0 \uc0ac\uc6a9\ub41c \uc8fc\uc694 \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130\ub4e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uac01 \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130\ub294 \ud6c8\ub828 \uacfc\uc815\uc758 \uc548\uc815\uc131 \ubc0f \ud6a8\uc728\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uc911\uc694\ud55c \uc694\uc18c\uc785\ub2c8\ub2e4. REINFORCE++ \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud55c \ud6c8\ub828\uc5d0 \ub300\ud55c \uc138\ubd80 \uc815\ubcf4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.  \uc5ec\uae30\uc5d0\ub294 \ubc30\uce58 \ud06c\uae30(Batch Size), \ub864\uc544\uc6c3 \uc218(Rollout N), KL \uacc4\uc218(KL Coef), \ucd5c\ub300 \uc751\ub2f5 \uae38\uc774(Max Response Len) \ub4f1\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4.  \uc774 \ud45c\ub294 \ub17c\ubb38\uc5d0\uc11c \uc81c\uc2dc\ub41c \ud6c8\ub828 \uc124\uc815\uc744 \uc774\ud574\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4.", "section": "2 Method"}, {"content": "| Model | 2 | 3 | 4 | 5 | 6 | 7 | 8 | Avg. |\n|---|---|---|---|---|---|---|---|---|\n| **o3-mini-high** | 0.99 | 0.98 | 0.97 | 0.95 | 0.94 | 0.89 | 0.83 | 0.94 |\n| **o1-2024-12-17** | 0.83 | 0.51 | 0.38 | 0.38 | 0.35 | 0.30 | 0.20 | 0.42 |\n| **Deepseek-R1** | 0.91 | 0.73 | 0.77 | 0.78 | 0.75 | 0.88 | 0.83 | 0.81 |\n| **GPT-4o** | 0.68 | 0.57 | 0.49 | 0.32 | 0.23 | 0.21 | 0.11 | 0.37 |\n| **GPT-4o-mini** | 0.63 | 0.42 | 0.34 | 0.17 | 0.09 | 0.10 | 0.01 | 0.25 |\n| **NuminaMath-7B-CoT** | 0.28 | 0.13 | 0.12 | 0.05 | 0.01 | 0.00 | 0.00 | 0.08 |\n| **Deepseek-Math-7B** | 0.35 | 0.21 | 0.08 | 0.06 | 0.02 | 0.00 | 0.00 | 0.10 |\n| **Qwen2.5-Base-7B** | 0.41 | 0.34 | 0.16 | 0.09 | 0.00 | 0.00 | 0.00 | 0.14 |\n| **Qwen2.5-7B-Instruct-1M** | 0.49 | 0.40 | 0.25 | 0.11 | 0.06 | 0.02 | 0.01 | 0.19 |\n| + **Logic-RL** | 0.99<sup>\u21910.50</sup> | 0.99<sup>\u21910.59</sup> | 0.94<sup>\u21910.69</sup> | 0.92<sup>\u21910.81</sup> | 0.91<sup>\u21910.85</sup> | 0.80<sup>\u21910.78</sup> | 0.67<sup>\u21910.48</sup> | 0.89<sup>\u21910.70</sup> |", "caption": "Table 2: Comparison of different models including reasoning models and general models on K&K logic puzzle across various difficulty.", "description": "\ud45c 2\ub294 \ub2e4\uc591\ud55c \ub09c\uc774\ub3c4\uc758 K&K \ub17c\ub9ac \ud37c\uc990\uc5d0 \ub300\ud574 \ucd94\ub860 \ubaa8\ub378 \ubc0f \uc77c\ubc18 \ubaa8\ub378\uc744 \ud3ec\ud568\ud55c \uc5ec\ub7ec \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ube44\uad50\ud55c \ud45c\uc785\ub2c8\ub2e4.  \ub2e4\uc591\ud55c \uc218\uc758 \ub4f1\uc7a5\uc778\ubb3c(2\uba85\uc5d0\uc11c 8\uba85)\uc744 \uac00\uc9c4 \ud37c\uc990\uc5d0 \ub300\ud55c \uac01 \ubaa8\ub378\uc758 \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc8fc\uc5b4, \ubaa8\ub378\uc758 \ucd94\ub860 \ub2a5\ub825\uc744 \ub2e4\uc591\ud55c \ubcf5\uc7a1\ub3c4 \uc218\uc900\uc5d0\uc11c \ud3c9\uac00\ud569\ub2c8\ub2e4.  \uc774 \ud45c\ub294 Logic-RL \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub2e4\ub978 \uae30\uc874 \ubaa8\ub378\ub4e4\uacfc \ube44\uad50\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.", "section": "3 \uc2e4\ud5d8"}, {"content": "| Question | Response |\n|---|---| \n| A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves always lie. Five residents (William, Chloe, Lily, Jack, and Logan) made the following statements: (1) William said: \"William is a knight and Chloe is a knight.\" (2) Chloe said: \"Lily is a knight.\" (3) Lily said: \"William is a knave and Jack is a knight.\" (4) Jack said: \"William is a knave.\" (5) Logan said: \"Lily is a knave if and only if William is a knave.\" So who is a knight and who is a knave? | To solve this, let\u2019s start analyzing the statements one by one, beginning with William\u2019s statement since it\u2019s a good starting point due to its self-referential nature. William\u2019s statement: \"William is a knight and Chloe is a knight.\" If William is telling the truth (i.e., he is a knight), then both parts of his statement must be true. However, if William is a knight, the statement \"William is a knight\" is true, but the statement \"Chloe is a knight\" cannot determine the truth about Chloe at this point since we haven\u2019t analyzed Chloe\u2019s statement yet. Therefore, William cannot be a knight because it would lead to a contradiction. Let\u2019s test both possibilities. Testing Chloe as a knight: If Chloe is a knight, then her statement \"Lily is a knight\" is true, so Lily is a knight. Analyzing Lily\u2019s statement: \"William is a knave and Jack is a knight.\" Now, we have determined: - William is a knave. - Chloe is a knight. Let\u2019s verify all statements: - \"William is a knight and Chloe is a knight\" (False, since William is a knave). - \"Lily is a knight\" (True).  |", "caption": "Table 3: An example of a large language model trained through reinforcement learning naturally exhibiting reasoning behaviors such as hesitation, exploration, summarization, and verification, even though these behaviors were not present in the training data.", "description": "\ubcf8 \ud45c\ub294 \uac15\ud654 \ud559\uc2b5\uc744 \ud1b5\ud574 \ud6c8\ub828\ub41c \ub300\uaddc\ubaa8 \uc5b8\uc5b4 \ubaa8\ub378\uc774 \ud6c8\ub828 \ub370\uc774\ud130\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc558\ub358 \uc8fc\uc800, \ud0d0\uc0c9, \uc694\uc57d, \uac80\uc99d\uacfc \uac19\uc740 \ucd94\ub860 \ub3d9\uc791\uc744 \uc790\uc5f0\uc2a4\ub7fd\uac8c \ubcf4\uc774\ub294 \uc608\uc2dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \ud45c\uc5d0\ub294 \uc9c8\ubb38\uacfc \uc751\ub2f5\uc758 \ud615\ud0dc\ub85c \ubb38\uc81c \ud480\uc774 \uacfc\uc815\uc774 \uc81c\uc2dc\ub418\uc5b4 \uc788\uc73c\uba70, \ubaa8\ub378\uc774 \ubb38\uc81c \ud574\uacb0 \uacfc\uc815\uc5d0\uc11c \uc5ec\ub7ec \uac00\uc9c0 \uac00\ub2a5\uc131\uc744 \ud0d0\uc0c9\ud558\uace0, \uadf8 \uacfc\uc815\uc744 \uc694\uc57d\ud558\uace0, \ucd5c\uc885 \ub2f5\ubcc0\uc744 \ub0b4\ub9ac\uae30 \uc804\uc5d0 \uc911\uac04 \uacb0\uacfc\ub97c \uac80\uc99d\ud558\ub294 \ubaa8\uc2b5\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub294 \ub2e8\uc21c\ud788 \uc554\uae30\uac00 \uc544\ub2cc \uc2e4\uc81c \ucd94\ub860 \ub2a5\ub825\uc774 \ud5a5\uc0c1\ub418\uc5c8\uc74c\uc744 \uc2dc\uc0ac\ud569\ub2c8\ub2e4.", "section": "8 Qualitative Analysis of Emergent Reasoning"}, {"content": "| Question | Response |\n|---|---| \n| A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves always lie. Three residents (Jack, Samuel, Lily) made the following statements: (1) Jack said, \"If Samuel is a knight, then Lily is a knave.\" (2) Samuel said, \"If Jack is a knight, then Lily is a knave.\" (3) Lily said, \"Jack is a knight.\" So who is a knight and who is a knave? | Let\u2019s analyze the statements step by step.  1. Jack\u2019s statement is: \"If Samuel is a knight then Lily is a knave.\" ... Now that we know Samuel is a knave, let\u2019s analyze Samuel\u2019s statement again: - Samuel\u2019s statement: \"If Jack is a knight then Lily is a knave.\" - An implication \"If P then Q\" is false only when P is true and Q is false. (Formula Application) Here, \"If Jack is a knight then Lily is a knave\" is false when Jack is a knight and Lily is not a knave. This is consistent with our previous conclusion that Jack is a knight and Lily is a knight. ... |", "caption": "Table 4: An example of using logical formulas to solve a Knights and Knaves puzzle.", "description": "\ud45c 4\ub294 \uae30\uc0ac\uc640 \uc545\ub2f9 \ud37c\uc990\uc744 \ud478\ub294 \ub370 \ub17c\ub9ac \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uc608\uc2dc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294 \uaddc\uce59 \uae30\ubc18 \uac15\ud654 \ud559\uc2b5\uc744 \ud1b5\ud574 \ud559\uc2b5\ub41c \uc5b8\uc5b4 \ubaa8\ub378\uc774 \ucd94\ub860 \uacfc\uc815\uc5d0\uc11c \ub17c\ub9ac\uc801 \uacf5\uc2dd\uc744 \uc790\uc5f0\uc2a4\ub7fd\uac8c \uc801\uc6a9\ud558\ub294 \ub2a5\ub825\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc0ac\ub840\ub97c \uc81c\uc2dc\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.  \uc774 \ud45c\ub294 \ubaa8\ub378\uc774 \ub2e8\uc21c\ud788 \ud328\ud134 \ub9e4\uce6d\uc744 \ud1b5\ud574 \ub2f5\uc744 \ucc3e\ub294 \uac83\uc774 \uc544\ub2c8\ub77c,  \ub17c\ub9ac\uc801 \ucd94\ub860 \uacfc\uc815\uc744 \uac70\uccd0 \ubb38\uc81c\ub97c \ud574\uacb0\ud568\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc911\uc694\ud55c \uadfc\uac70 \uc790\ub8cc\ub85c \ud65c\uc6a9\ub429\ub2c8\ub2e4.", "section": "8 Qualitative Analysis of Emergent Reasoning"}, {"content": "| Question | Response |\n|---|---| \n| A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves always lie. Six residents (Benjamin, Michael, Evelyn, Sophia, James, and Jacob) made the following statements: (1) Benjamin said, \"If Sophia is a knight, then Evelyn is also a knight.\" (2) Michael said, \"Benjamin is a knave, or James is a knight.\" (3) Evelyn said, \"Sophia is a knight, or James is a knave.\" (4) Sophia said, \"If Michael is a knave, then James is a knight.\" (5) James said, \"Sophia is a knight, or Evelyn is a knight.\" (6) Jacob said, \"Benjamin is a knave, and Sophia is a knight.\" So who is a knight and who is a knave? | <think> Let\u2019s analyze each statement step-by-step based on whether the speaker is a knight or a knave. 1. Benjamin: \"If Sophia is a knight then Evelyn is a knight\" - If Benjamin is a knight, then the statement must be true. Thus, if Sophia is a knight, Evelyn has to be a knight. 2. Michael: \"Benjamin is a knave or James is a knight\" \u2026 From Jacob\u2019s statement, if Jacob is a knight then Sophia must be a knight and Benjamin must be a knave.  \u2026 - \u5047\u8bbe Jacob \u662f\u9a91\u58eb\uff0c\u90a3\u4e48 Jacob \u7684\u58f0\u660e \"Benjamin \u662f\u80cc\u53db\u8005\u4e14 Sophia \u662f\u9a91\u58eb\" \u5c31\u662f\u771f\u7684\u3002\u8fd9\u610f\u5473\u7740 Benjamin \u662f\u80cc\u53db\u8005\u800c Sophia \u662f\u9a91\u58eb\u3002 - \u65e2\u7136 Sophia \u662f\u9a91\u58eb\uff0c\u6839\u636e Benjamin \u7684\u58f0\u660e \"\u5982\u679c Sophia \u662f\u9a91\u58eb\u90a3\u4e48 Evelyn \u4e5f\u662f\u9a91\u58eb\"\uff0cEvelyn \u4e5f\u662f\u9a91\u58eb\u3002 \u2026 \u7efc\u4e0a\u6240\u8ff0\uff0cSophia, Evelyn, \u548c Jacob \u662f\u9a91\u58eb\uff0c\u800c Benjamin, Michael, \u548c James \u662f\u80cc\u53db\u8005\u3002  (Language Switching) \u2026 |", "caption": "Table 5: An example of our model used language switching to solve a Knights and Knaves puzzle.", "description": "\ud45c 5\ub294 \ub17c\ubb38\uc5d0\uc11c \uc81c\uc2dc\ub41c \ubaa8\ub378\uc774 \uae30\uc0ac\uc640 \uc545\ub2f9 \ud37c\uc990\uc744 \ud480\uae30 \uc704\ud574 \uc5b8\uc5b4 \uc804\ud658\uc744 \uc0ac\uc6a9\ud55c \uc0ac\ub840\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uc774 \ud45c\ub294 \ubaa8\ub378\uc774 \ucd94\ub860 \uacfc\uc815\uc5d0\uc11c \uc601\uc5b4\uc640 \uc911\uad6d\uc5b4\ub97c \ud63c\uc6a9\ud558\uc5ec \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ubcf4\uc5ec\uc8fc\ub294 \ud558\ub098\uc758 \uc608\uc2dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub294 \ubaa8\ub378\uc774 \ub2e4\uc591\ud55c \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc8fc\uba70, \ucd94\ub860 \uacfc\uc815\uc758 \ubcf5\uc7a1\uc131\uacfc \uc735\ud1b5\uc131\uc744 \uc2dc\uc0ac\ud569\ub2c8\ub2e4.  \ud2b9\ud788, \ubaa8\ub378\uc774 \uc911\uad6d\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \ubd80\ubd84\uc740 \ubaa8\ub378\uc758 \ub0b4\ubd80\uc801\uc778 \uc0ac\uace0 \uacfc\uc815\uc774 \ubcf5\uc7a1\ud558\uace0 \ub2e4\uce35\uc801\uc784\uc744 \ubcf4\uc5ec\uc8fc\ub294 \ub2e8\uc11c\uac00 \ub429\ub2c8\ub2e4.", "section": "8 Qualitative Analysis of Emergent Reasoning"}]