[{"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/std-diloco.png", "caption": "Figure 1: Data flow and operations in standard DiLoCo. Here, 4 workers execute in parallel and alternate sequentially computation (the outer and inner optimization steps) and communication (averaging outer gradients across workers).", "description": "\uadf8\ub9bc 1\uc740 DiLoCo\uc758 \ub370\uc774\ud130 \ud750\ub984\uacfc \uc5f0\uc0b0 \uacfc\uc815\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. 4\uac1c\uc758 \uc791\uc5c5\uc790\uac00 \ubcd1\ub82c\ub85c \uc2e4\ud589\ub418\uace0, \uc21c\ucc28\uc801\uc73c\ub85c \uacc4\uc0b0(\uc678\ubd80 \ubc0f \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4)\uacfc \ud1b5\uc2e0(\uc791\uc5c5\uc790 \uac04 \uc678\ubd80 \uae30\uc6b8\uae30 \ud3c9\uade0\ud654)\uc744 \ubc88\uac08\uc544 \uc218\ud589\ud558\ub294 \ubc29\uc2dd\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc678\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uc5d0\uc11c \uc791\uc5c5\uc790\ub4e4\uc740 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc5ec\ub7ec \ucd5c\uc801\ud654 \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uace0, \uadf8 \ud6c4 \uc678\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ub97c \ub3d9\uae30\ud654\ud569\ub2c8\ub2e4. \uc774 \uacfc\uc815\uc740 \ud45c\uc900 \ub370\uc774\ud130 \ubcd1\ub82c \ud559\uc2b5\ubcf4\ub2e4 \ud6e8\uc52c \uc801\uc740 \ud1b5\uc2e0\uc744 \ud544\uc694\ub85c \ud558\uc9c0\ub9cc, \uc791\uc5c5\uc790\uac00 \ub370\uc774\ud130 \uc13c\ud130\uc778 \ud658\uacbd\uc5d0\uc11c\ub294 \uac01 \uc678\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uc5d0\uc11c \ud544\uc694\ud55c \ucc28\ub2e8\uc73c\ub85c \uc778\ud574 \uc0c1\ub2f9\ud55c \uc18d\ub3c4 \uc800\ud558\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub9bc\uc5d0\uc11c\ub294 \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uc5d0\uc11c \uc791\uc5c5\uc790\ub4e4\uc774 \ub3c5\ub9bd\uc801\uc73c\ub85c \ucd5c\uc801\ud654\ub97c \uc218\ud589\ud558\uace0, \uc678\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ub97c \uc8fc\uace0\ubc1b\ub294 \uacfc\uc815\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "2. \uc54c\uace0\ub9ac\uc998"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/delayed-diloco.png", "caption": "Figure 2: Data flow and operations in DiLoCo with delayed outer gradients. Here, 4 workers execute optimization steps in parallel with each other, as well as with the communication required for averaging outer gradients. This is accomplished by delaying the application of the averaged outer gradient in the outer optimizer.", "description": "\uadf8\ub9bc 2\ub294 \uc9c0\uc5f0\ub41c \uc678\ubd80 \uae30\uc6b8\uae30(delayed outer gradients)\ub97c \uc0ac\uc6a9\ud558\ub294 DiLoCo\uc758 \ub370\uc774\ud130 \ud750\ub984\uacfc \uc5f0\uc0b0\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. 4\uac1c\uc758 \uc791\uc5c5\uc790\ub294 \uc11c\ub85c \ubcd1\ub82c\ub85c, \uadf8\ub9ac\uace0 \uc678\ubd80 \uae30\uc6b8\uae30\uc758 \ud3c9\uade0\ud654\uc5d0 \ud544\uc694\ud55c \ud1b5\uc2e0\uacfc\ub3c4 \ubcd1\ub82c\ub85c \ucd5c\uc801\ud654 \ub2e8\uacc4\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc774\ub294 \uc678\ubd80 \ucd5c\uc801\ud654\uae30\uc5d0\uc11c \ud3c9\uade0\ud654\ub41c \uc678\ubd80 \uae30\uc6b8\uae30\uc758 \uc801\uc6a9\uc744 \uc9c0\uc5f0\uc2dc\ud0b4\uc73c\ub85c\uc368 \ub2ec\uc131\ub429\ub2c8\ub2e4.  \uc880 \ub354 \uc790\uc138\ud788 \uc124\uba85\ud558\uba74, \uac01 \uc791\uc5c5\uc790\ub294 \ub3c5\ub9bd\uc801\uc73c\ub85c \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uace0, \uadf8 \uacb0\uacfc\ub97c \uc678\ubd80 \uae30\uc6b8\uae30\ub85c \uc9d1\uacc4\ud569\ub2c8\ub2e4.  \ud558\uc9c0\ub9cc \uc774 \uc678\ubd80 \uae30\uc6b8\uae30\ub294 \ubc14\ub85c \uc801\uc6a9\ub418\uc9c0 \uc54a\uace0, \ub2e4\uc74c \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4\uac00 \uc2dc\uc791\ub418\uae30 \uc804\uae4c\uc9c0 \uc9c0\uc5f0\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\uc5f0\uc740 \ud1b5\uc2e0\uacfc \uacc4\uc0b0\uc774 \uacb9\uce58\ub3c4\ub85d \ud558\uc5ec \uc804\uccb4 \ucc98\ub9ac \uc2dc\uac04\uc744 \ub2e8\ucd95\ud558\ub294 \ud6a8\uacfc\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "section": "\uc54c\uace0\ub9ac\uc998"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/bandwidth_1b.png", "caption": "(a) 1B parameters model.", "description": "\uadf8\ub9bc 3(a)\ub294 10\uc5b5\uac1c\uc758 \ud30c\ub77c\ubbf8\ud130\ub97c \uac00\uc9c4 \uc5b8\uc5b4 \ubaa8\ub378\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c\uc758 DiLoCo \uacc4\uc5f4\uc758 \uc54c\uace0\ub9ac\uc998\uacfc \ub370\uc774\ud130 \ubcd1\ub82c \ud559\uc2b5\uc758 \uc5f0\uc0b0\ub7c9 \uc0ac\uc6a9\ub960\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud55c \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uac01 \uc54c\uace0\ub9ac\uc998\uc740 \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc2dc\uac04\uc744 \uacc4\uc0b0\uc5d0 \ud560\uc560\ud558\uace0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc2dc\uac04\uc744 \ud1b5\uc2e0\uc5d0 \uc18c\ube44\ud558\ub294\uc9c0 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc800\ub300\uc5ed\ud3ed \ud658\uacbd\uc5d0\uc11c\ub3c4 \ud6a8\uc728\uc801\uc778 \uc5f0\uc0b0\ub7c9\uc744 \uc720\uc9c0\ud558\uae30 \uc704\ud55c DiLoCo \uc54c\uace0\ub9ac\uc998 \ucd5c\uc801\ud654\uc758 \ud6a8\uacfc\ub97c \uc2dc\uac01\uc801\uc73c\ub85c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.", "section": "3.1 \uc5f0\uc0b0\ub7c9 \uc0ac\uc6a9\ub960 \uc2dc\ubbac\ub808\uc774\uc158"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/bandwidth_10b.png", "caption": "(b) 10B parameters model", "description": "\uadf8\ub9bc (b)\ub294 100\uc5b5 \uac1c\uc758 \ub9e4\uac1c\ubcc0\uc218\ub97c \uac00\uc9c4 \ubaa8\ub378\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c\uc758 DiLoCo \uacc4\uc5f4 \uc54c\uace0\ub9ac\uc998\uc758 \uacc4\uc0b0 \ud65c\uc6a9\ub3c4\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud55c \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. DiLoCo \uc54c\uace0\ub9ac\uc998\uc740 \ud1b5\uc2e0\uacfc \uacc4\uc0b0\uc744 \uc911\ucca9\ud558\uc5ec \ub300\uc5ed\ud3ed\uc774 \ub0ae\uc740 \ud658\uacbd\uc5d0\uc11c\ub3c4 \ub192\uc740 \uacc4\uc0b0 \ud6a8\uc728\uc744 \ub2ec\uc131\ud558\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 \uc5ec\ub7ec DiLoCo \ubcc0\ud615(\ud45c\uc900 DiLoCo, 1-\ub0b4\ubd80 \ub2e8\uacc4 \uc911\ucca9, 1-\uc678\ubd80 \ub2e8\uacc4 \uc911\ucca9)\uacfc \ub370\uc774\ud130 \ubcd1\ub82c \ubc29\uc2dd\uc744 \ube44\uad50\ud558\uc5ec \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c \uac01 \uc54c\uace0\ub9ac\uc998\uc758 \uacc4\uc0b0 \uc2dc\uac04 \ub300\ube44 \ud1b5\uc2e0 \uc2dc\uac04 \ube44\uc728\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 DiLoCo\uc758 \uc911\ucca9 \uae30\ubc95\uc774 \uc81c\ud55c\ub41c \ub300\uc5ed\ud3ed \ud658\uacbd\uc5d0\uc11c\ub3c4 \ud6a8\uacfc\uc801\uc784\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "3.1 \uacc4\uc0b0 \ud65c\uc6a9\ub3c4 \uc2dc\ubbac\ub808\uc774\uc158"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/bandwidth_100b.png", "caption": "(c) 100B parameters model", "description": "\uadf8\ub9bc 3(c)\ub294 1000\uc5b5 \uac1c\uc758 \ud30c\ub77c\ubbf8\ud130\ub97c \uac00\uc9c4 \ubaa8\ub378\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c\uc758 DiLoCo \uacc4\uc5f4\uc758 \ubd84\uc0b0 \ud559\uc2b5 \ubc29\ubc95\ub4e4\uc758 \uacc4\uc0b0 \uc790\uc6d0 \ud65c\uc6a9\ub3c4\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud55c \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  x\ucd95\uc740 WAN \ub300\uc5ed\ud3ed(Gbit/s)\uc744 \ub098\ud0c0\ub0b4\uace0, y\ucd95\uc740 \uacc4\uc0b0 \uc790\uc6d0 \ud65c\uc6a9\ub3c4(0.0~1.0)\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. 0.8\uc758 \uacc4\uc0b0 \uc790\uc6d0 \ud65c\uc6a9\ub3c4\ub294 \uc804\uccb4 \uc2dc\uac04\uc758 80%\ub97c \uacc4\uc0b0\uc5d0, 20%\ub97c \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ud568\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub370\uc774\ud130 \ubcd1\ub82c \ubc29\uc2dd(Data-Parallel)\uc740 \ub9e4\uc6b0 \ub192\uc740 \ub300\uc5ed\ud3ed\uc744 \ud544\uc694\ub85c \ud558\ub294 \ubc18\uba74, \uc81c\uc548\ub41c \ubc29\ubc95\uc740 1~5 Gbit/s\uc758 \ube44\uad50\uc801 \ub0ae\uc740 \ub300\uc5ed\ud3ed\uc5d0\uc11c\ub3c4 95%\uc5d0 \uac00\uae4c\uc6b4 \ub192\uc740 \uacc4\uc0b0 \uc790\uc6d0 \ud65c\uc6a9\ub3c4\ub97c \ub2ec\uc131\ud568\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \ub2e4\uc591\ud55c DiLoCo \ubcc0\ud615(Streaming DiLoCo, 1-inner-step overlapped, 1-outer-step overlapped) \ub4e4\uc758 \uc131\ub2a5\uc744 \ube44\uad50 \ubd84\uc11d\ud558\uc5ec  \uc81c\uc548\ub41c \ubc29\ubc95\uc758 \ud6a8\uc728\uc131\uc744 \uac15\uc870\ud569\ub2c8\ub2e4.", "section": "3.1. Compute utilization simulation"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/scaling_loss.png", "caption": "Figure 3: Compute Utilization simulated across a range of bandwidth. A compute utilization of 0.8 means 80% of the time is spent in computation, and 20% in communication. Our best method reaches a compute utilization of 95% for models 1B, 10B, and 100B with a bandwidth roughly constant between 1 and 5 Gbit/s. Data-Parallel on the other hand requires 100, 200, and 300Gbit/s.", "description": "\uadf8\ub9bc 3\uc740 \ub2e4\uc591\ud55c \ub300\uc5ed\ud3ed\uc5d0\uc11c \uc2dc\ubbac\ub808\uc774\uc158\ub41c \ucef4\ud4e8\ud305 \ud65c\uc6a9\ub3c4\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucef4\ud4e8\ud305 \ud65c\uc6a9\ub3c4 0.8\uc740 \uc2dc\uac04\uc758 80%\uac00 \uacc4\uc0b0\uc5d0, 20%\uac00 \ud1b5\uc2e0\uc5d0 \uc0ac\uc6a9\ub428\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ubcf8 \ub17c\ubb38\uc758 \ucd5c\uace0 \uc131\ub2a5 \ubc29\ubc95\uc740 1B, 10B, 100B \ud30c\ub77c\ubbf8\ud130 \ubaa8\ub378\uc5d0\uc11c \ub300\uc5ed\ud3ed\uc774 1~5 Gbit/s\ub85c \uac70\uc758 \uc77c\uc815\ud558\uac8c \uc720\uc9c0\ub418\uba74\uc11c 95%\uc758 \ucef4\ud4e8\ud305 \ud65c\uc6a9\ub3c4\uc5d0 \ub3c4\ub2ec\ud569\ub2c8\ub2e4. \ubc18\uba74, \ub370\uc774\ud130 \ubcd1\ub82c \ubc29\uc2dd\uc740 100, 200, 300 Gbit/s\uc758 \ub300\uc5ed\ud3ed\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 \uc81c\uc548\ub41c \ubc29\ubc95\uc774 \ub370\uc774\ud130 \ubcd1\ub82c \ubc29\uc2dd\ubcf4\ub2e4 \ud6e8\uc52c \ud6a8\uc728\uc801\uc73c\ub85c \ud1b5\uc2e0 \ub300\uc5ed\ud3ed\uc744 \uc0ac\uc6a9\ud568\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "3.1. \ucef4\ud4e8\ud305 \ud65c\uc6a9\ub3c4 \uc2dc\ubbac\ub808\uc774\uc158"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/scaling_hellaswag.png", "caption": "(a) Evaluation loss on C4", "description": "\uadf8\ub9bc 4 (a)\ub294 C4 \ub370\uc774\ud130\uc14b\uc744 \uc0ac\uc6a9\ud558\uc5ec 35M\uac1c\uc5d0\uc11c 1B\uac1c\uae4c\uc9c0 \ub2e4\uc591\ud55c \ud06c\uae30\uc758 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a8 \ud6c4 \ud3c9\uac00 \uc190\uc2e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uac01 \ubaa8\ub378\uc758 \ud06c\uae30\uc5d0 \ub530\ub77c \ucd1d \ud559\uc2b5 \uc5f0\uc0b0\ub7c9(Total training flops)\uc774 \uc99d\uac00\ud558\uba70, \uc774\uc5d0 \ub530\ub77c \ud3c9\uac00 \uc190\uc2e4\uc774 \uac10\uc18c\ud558\ub294 \ucd94\uc138\ub97c \ubcf4\uc785\ub2c8\ub2e4.  \ub2e4\uc591\ud55c \ubc29\ubc95\ub4e4(Data-Parallel, Streaming DiLoCo, inner-overlap, outer-eager-overlap)\uc5d0 \ub300\ud55c \uacb0\uacfc\uac00 \ube44\uad50\ub418\uc5b4 \uc81c\uc2dc\ub429\ub2c8\ub2e4.  \uc774\ub97c \ud1b5\ud574 \ub2e4\uc591\ud55c \ubd84\uc0b0 \ud559\uc2b5 \ubc29\ubc95\uc758 \uc131\ub2a5\uc744 \uc190\uc2e4 \uac12\uc744 \uae30\uc900\uc73c\ub85c \ube44\uad50 \ubd84\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.", "section": "3. \uc2e4\ud5d8"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/stale_vs_eager_h.png", "caption": "(b) HellaSwag accuracy", "description": "\uadf8\ub9bc 4(b)\ub294 35M\uac1c\uc5d0\uc11c 1B\uac1c \ub9e4\uac1c\ubcc0\uc218\uae4c\uc9c0 \ubaa8\ub378 \ud06c\uae30\ub97c \ud0a4\uc6b0\uba74\uc11c C4 \ub370\uc774\ud130\uc14b\uc5d0\uc11c \ud6c8\ub828\ub41c \ubaa8\ub378\uc758 HellaSwag \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774 \uadf8\ub798\ud504\ub294 \ub2e4\uc591\ud55c \ubd84\uc0b0 \ud559\uc2b5 \ubc29\ubc95(Data-Parallel, Streaming DiLoCo, \uadf8\ub9ac\uace0 \uc911\ucca9\ub41c \uae30\uc6b8\uae30 \uc5c5\ub370\uc774\ud2b8\ub97c \uc0ac\uc6a9\ud55c Streaming DiLoCo \ubcc0\ud615)\uc5d0 \uac78\uccd0 \uc131\ub2a5\uc744 \ube44\uad50\ud569\ub2c8\ub2e4. \uadf8\ub798\ud504\uc758 x\ucd95\uc740 \ucd1d \ud6c8\ub828 \ud50c\ub86d(FLOPs)\uc774\uace0, y\ucd95\uc740 HellaSwag \uc815\ud655\ub3c4\uc785\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc591\ud55c \ubaa8\ub378 \ud06c\uae30\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \ud559\uc2b5 \ubc29\ubc95\uc758 \uc0c1\ub300\uc801 \uc131\ub2a5\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "3. \uc2e4\ud5d8"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/cu_overlap.png", "caption": "Figure 4: Scaling models from 35M (1.49e17 flops) to 1B parameters (1.9e20 flops) on C4.", "description": "\uadf8\ub9bc 4\ub294 C4 \ub370\uc774\ud130\uc14b\uc744 \uc0ac\uc6a9\ud558\uc5ec 35M(1.49e17 FLOPs)\ubd80\ud130 1B(1.9e20 FLOPs) \ud30c\ub77c\ubbf8\ud130\uae4c\uc9c0 \ub2e4\uc591\ud55c \ud06c\uae30\uc758 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a8 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  x\ucd95\uc740 \ucd1d \ud559\uc2b5 \uc5f0\uc0b0\ub7c9(FLOPs)\uc744 \ub098\ud0c0\ub0b4\uace0, y\ucd95\uc740 C4 \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud55c \ud3c9\uac00 \uc190\uc2e4(\uc67c\ucabd)\uacfc HellaSwag \uc815\ud655\ub3c4(\uc624\ub978\ucabd)\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 \ubaa8\ub378 \ud06c\uae30\uac00 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \uc131\ub2a5\uc774 \uc5b4\ub5bb\uac8c \ubcc0\ud558\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc81c\uc548\ub41c \ubc29\ubc95\uc774 \uae30\uc874 \ubc29\ubc95\ub4e4\uc5d0 \ube44\ud574 \uc5bc\ub9c8\ub098 \ud6a8\uc728\uc801\uc778\uc9c0\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.  \ub2e4\uc591\ud55c \ubc29\ubc95(Data-Parallel, Streaming DiLoCo, \uadf8\ub9ac\uace0 \uc81c\uc548\ub41c \ubc29\ubc95\uc758 \uc5ec\ub7ec \ubcc0\ud615)\uc758 \uc131\ub2a5\uc744 \ube44\uad50\ud558\uc5ec, \ubaa8\ub378 \ud06c\uae30\uc758 \uc99d\uac00\uc5d0 \ub530\ub978 \uc131\ub2a5 \ubcc0\ud654\uc640 \uc0c1\ub300\uc801\uc778 \ud6a8\uc728\uc131\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "3. Experiments"}, {"figure_path": "https://arxiv.org/html/2502.12996/extracted/6214305/figures/loss_change_compression.png", "caption": "Figure 5: Comparison of overlapping communication over an outer step, using the na\u00efve delayed version (Algorithm\u00a02) and the eager version (Algorithm\u00a03) when varying the number of inner steps H\ud835\udc3bHitalic_H.", "description": "\uadf8\ub9bc 5\ub294 \ub2e4\uc591\ud55c \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4 \uc218 H\uc5d0 \ub300\ud574, \ub2e8\uc21c \uc9c0\uc5f0 \ubc84\uc804(\uc54c\uace0\ub9ac\uc998 2)\uacfc \ub2a5\ub3d9 \ubc84\uc804(\uc54c\uace0\ub9ac\uc998 3)\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc678\ubd80 \ub2e8\uacc4\uc5d0 \uac78\uce5c \uc911\ucca9 \ud1b5\uc2e0\uc744 \ube44\uad50\ud55c \uac83\uc785\ub2c8\ub2e4.  x\ucd95\uc740 \ub0b4\ubd80 \ubc18\ubcf5 \ud69f\uc218 H\ub97c \ub098\ud0c0\ub0b4\uace0 y\ucd95\uc740 C4 \ub370\uc774\ud130\uc14b\uc5d0\uc11c \ud3c9\uac00 \uc190\uc2e4\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 \ub2a5\ub3d9 \uc5c5\ub370\uc774\ud2b8 \ubc29\ubc95\uc774 \ub0b4\ubd80 \ucd5c\uc801\ud654 \ub2e8\uacc4 \uc218\uc758 \ubcc0\ud654\uc5d0 \ub300\ud574 \ub354\uc6b1 \uc548\uc815\uc801\uc778 \uc131\ub2a5\uc744 \ubcf4\uc5ec\uc90c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "3. Experiments"}]