[{"content": "| Memory Task | Mode | Brief description of the task | T | Oracle Info | Prompt | Memory Task Type |\n|---|---|---|---|---|---|---|\n| ShellGame[Mode]-v0 | Touch<br>Push<br>Pick | Memorize the position of the ball after some time being covered by the cups and then interact with the cup the ball is under. | 90 | cup_with_ball_number | \u2014 | Object |\n| Intercept[Mode]-v0 | Slow<br>Medium<br>Fast | Memorize the positions of the rolling ball, estimate its velocity through those positions, and then aim the ball at the target. | 90 | initial_velocity | \u2014 | Spatial |\n| InterceptGrab[Mode]-v0 | Slow<br>Medium<br>Fast | Memorize the positions of the rolling ball, estimate its velocity through those positions, and then catch the ball with the gripper and lift it up. | 90 | initial_velocity | \u2014 | Spatial |\n| RotateLenient[Mode]-v0 | Pos<br>PosNeg | Memorize the initial position of the peg and rotate it by a given angle. | 90 | y_angle_diff | target_angle | Spatial |\n| RotateStrict[Mode]-v0 | Pos<br>PosNeg | Memorize the initial position of the peg and rotate it to a given angle without shifting its center. | 90 | y_angle_diff | target_angle | Object |\n| TakeItBack-v0 | \u2014 | Memorize the initial position of the cube, move it to the target region, and then return it to its initial position. | 180 | xyz_initial | \u2014 | Spatial |\n| RememberColor[Mode]-v0 | 3\u00a0\u00a05\u00a0\u00a09 | Memorize the color of the cube and choose among other colors. | 60 | true_color_indices | \u2014 | Object |\n| RememberShape[Mode]-v0 | 3\u00a0\u00a05\u00a0\u00a09 | Memorize the shape of the cube and choose among other shapes. | 60 | true_shape_indices | \u2014 | Object |\n| RememberShapeAndColor | 3\u00d72<br>3\u00d73<br>5\u00d73 | Memorize the shape and color of the cube and choose among other shapes and colors. | 60 | true_shapes_info<br>true_colors_info | \u2014 | Object |\n| BunchOfColors[Mode]-v0 | 3\u00a0\u00a05\u00a0\u00a07 | Remember the colors of the set of cubes shown simultaneously in the bunch and touch them in any order. | 120 | true_color_indices | \u2014 | Capacity |\n| SeqOfColors[Mode]-v0 | 3\u00a0\u00a05\u00a0\u00a07 | Remember the colors of the set of cubes shown sequentially and then select them in any order. | 120 | true_color_indices | \u2014 | Capacity |\n| ChainOfColors[Mode]-v0 | 3\u00a0\u00a05\u00a0\u00a07 | Remember the colors of the set of cubes shown sequentially and then select them in the same order. | 120 | true_color_indices | \u2014 | Sequential |", "caption": "Table 1: MIKASA-Robo: A benchmark comprising 32 memory-intensive robotic manipulation tasks across 12 categories. Each task varies in difficulty and configuration modes. The table specifies episode timeout (T), the necessary information that the agent must memorize in order to succeed (Oracle Info), and task instructions (Prompt) for each environment. See Appendix\u00a0E for details.", "description": "\ud45c 1\uc740 MIKASA-Robo \ubca4\uce58\ub9c8\ud06c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. MIKASA-Robo\ub294 12\uac1c\uc758 \ubc94\uc8fc\uc5d0 \uac78\uccd0 32\uac1c\uc758 \uba54\ubaa8\ub9ac \uc9d1\uc57d\uc801 \ub85c\ubd07 \uc870\uc791 \uc791\uc5c5\uc73c\ub85c \uad6c\uc131\ub41c \ubca4\uce58\ub9c8\ud06c\uc785\ub2c8\ub2e4. \uac01 \uc791\uc5c5\uc740 \ub09c\uc774\ub3c4\uc640 \uad6c\uc131 \ubaa8\ub4dc\uac00 \ub2e4\ub985\ub2c8\ub2e4. \uc774 \ud45c\uc5d0\ub294 \uc5d0\ud53c\uc18c\ub4dc \uc81c\ud55c \uc2dc\uac04(T), \uc5d0\uc774\uc804\ud2b8\uac00 \uc131\uacf5\ud558\uae30 \uc704\ud574 \uae30\uc5b5\ud574\uc57c \ud558\ub294 \uc815\ubcf4(Oracle Info), \uadf8\ub9ac\uace0 \uac01 \ud658\uacbd\uc5d0 \ub300\ud55c \uc791\uc5c5 \uc9c0\uce68(Prompt)\uc774 \uba85\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ubd80\ub85d E\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.", "section": "6 MIKASA-ROBO"}, {"content": "| Environment | Memory Task | Brief description of the task | Observation Space | Action Space |\n|---|---|---|---|---|\n| Memory Cards | Capacity | Memorize the positions of revealed cards and correctly match pairs while minimizing incorrect guesses. | vector | discrete |\n| Numpad | Sequential | Memorize the sequence of movements and navigate the rolling ball on a 3\u00d73 grid by following the correct order while avoiding mistakes. | image, vector | discrete, continuous |\n| BSuite Memory Length | Object | Memorize the initial context signal and recall it after a given number of steps to take the correct action. | vector | discrete |\n| Minigrid-Memory | Object | Memorize the object in the starting room and use this information to select the correct path at the junction. | image | discrete |\n| Ballet | Sequential, Object | Memorize the sequence of movements performed by each uniquely colored and shaped dancer, then identify and approach the dancer who executed the given pattern. | image | discrete |\n| Passive Visual Match | Object | Memorize the target color displayed on the wall during the initial phase. After a brief distractor phase, identify and select the target color among the distractors by stepping on the corresponding ground pad. | image | discrete |\n| Passive-T-Maze | Object | Memorize the goal\u2019s location upon initial observation, navigate through the maze with limited sensory input, and select the correct path at the junction. | vector | discrete |\n| ViZDoom-two-colors | Object | Memorize the color of the briefly appearing pillar (green or red) and collect items of the same color to survive in the acid-filled room. | image | discrete |\n| Memory Maze | Spatial | Memorize the locations of objects and the maze structure using visual clues, then navigate efficiently to find objects of a specific color and score points. | image | discrete |\n| MemoryGym Mortar Mayhem | Capacity, Sequential | Memorize a sequence of movement commands and execute them in the correct order. | image | discrete |\n| MemoryGym Mystery Path | Capacity, Spatial | Memorize the invisible path and navigate it without stepping off. | image | discrete |\n| POPGym Repeat First | Object | Memorize the initial value presented at the first step and recall it correctly after receiving a sequence of random values. | vector | discrete |\n| POPGym Repeat Previous | Sequential, Object | Memorize the value observed at each step and recall the value from <math alttext=\"k\" class=\"ltx_Math\" display=\"inline\" id=\"A5.T5.1.1.1.1.1.1.m1.1\" style=\"background-color:#C1F5E7;\"><semantics id=\"A5.T5.1.1.1.1.1.1.m1.1a\"><mi id=\"A5.T5.1.1.1.1.1.1.m1.1.1\" mathbackground=\"#C1F5E7\" xref=\"A5.T5.1.1.1.1.1.1.m1.1.1.cmml\">\ud835\udc58</mi><annotation-xml encoding=\"MathML-Content\" id=\"A5.T5.1.1.1.1.1.1.m1.1b\"><ci id=\"A5.T5.1.1.1.1.1.1.m1.1.1.cmml\" xref=\"A5.T5.1.1.1.1.1.1.m1.1.1\">\ud835\udc58</ci></annotation-xml><annotation encoding=\"application/x-tex\" id=\"A5.T5.1.1.1.1.1.1.m1.1c\">k</annotation><annotation encoding=\"application/x-llamapun\" id=\"A5.T5.1.1.1.1.1.1.m1.1d\">italic_k</annotation></semantics></math> steps earlier when required. | vector | discrete |\n| POPGym Autoencode | Sequential | Memorize the sequence of cards presented at the beginning and reproduce them in the same order when required. | vector | discrete |\n| POPGym Count Recall | Object, Capacity | Memorize unique values encountered and count how many times a specific value has appeared. | vector | discrete |\n| POPGym vectorless Cartpole | Sequential | Memorize velocity data over time and integrate it to infer the position of the pole for balance control. | vector | continuous |\n| POPGym vectorless Pendulum | Sequential | Memorize angular velocity over time and integrate it to infer the pendulum\u2019s position for successful swing-up control. | vector | continuous |\n| POPGym Multiarmed Bandit | Object, Capacity | Memorize the reward probabilities of different slot machines by exploring them and identify the one with the highest expected reward. | vector | discrete |\n| POPGym Concentration | Capacity | Memorize the positions of revealed cards and match them with previously seen cards to find all matching pairs. | vector | discrete |\n| POPGym Battleship | Spatial | Memorize the coordinates of previous shots and their HIT or MISS feedback to build an internal representation of the board, avoid repeat shots, and strategically target ships for maximum rewards. | vector | discrete |\n| POPGym Mine Sweeper | Spatial | Memorize revealed grid information and use numerical clues to infer safe tiles while avoiding mines. | vector | discrete |\n| POPGym Labyrinth Explore | Spatial | Memorize previously visited cells and navigate the maze efficiently to discover new, unexplored areas and maximize rewards. | vector | discrete |\n| POPGym Labyrinth Escape | Spatial | Memorize the maze layout while exploring and navigate efficiently to find the exit and receive a reward. | vector | discrete |\n| POPGym Higher Lower | Object, Sequential | Memorize previously revealed card ranks and predict whether the next card will be higher or lower, updating the reference card after each prediction to maximize rewards. | vector | discrete |", "caption": "Table 2: Key memory-intensive environments from the reviewed studies for evaluating agent memory. The Atari\u00a0(Bellemare et\u00a0al., 2013) environment with frame stacking is included to illustrate that many memory-enhanced agents are tested solely in MDP. Benchmark first introduced in the same work. Benchmark is open-sourced.", "description": "\ud45c 2\ub294 \ubcf8 \ub17c\ubb38\uc5d0\uc11c \uac80\ud1a0\ud55c \uc5f0\uad6c\uc5d0\uc11c \uc81c\uc2dc\ub41c \uc5d0\uc774\uc804\ud2b8\uc758 \uae30\uc5b5 \ub2a5\ub825\uc744 \ud3c9\uac00\ud558\uae30 \uc704\ud55c \uc8fc\uc694 \uae30\uc5b5 \uc9d1\uc57d\uc801 \ud658\uacbd\ub4e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \ud45c\uc5d0\ub294 \ub2e4\uc591\ud55c \uae30\uc5b5 \uc720\ud615\uacfc \ub09c\uc774\ub3c4\ub97c \uac00\uc9c4 \uc5ec\ub7ec \ubca4\uce58\ub9c8\ud06c \ud658\uacbd\ub4e4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba70, \uac01 \ud658\uacbd\uc5d0 \ub300\ud55c \uac04\ub7b5\ud55c \uc124\uba85\uacfc \ud568\uaed8 \ud574\ub2f9 \ud658\uacbd\uc5d0\uc11c \ucc98\uc74c \uc18c\uac1c\ub41c \uc5f0\uad6c \ubc0f \uc624\ud508\uc18c\uc2a4 \uc5ec\ubd80\uac00 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788, Atari (Bellemare et al., 2013) \ud658\uacbd\uc758 \uacbd\uc6b0 \ud504\ub808\uc784 \uc2a4\ud0dc\ud0b9\uc744 \uc0ac\uc6a9\ud55c \uc608\uc2dc\ub97c \ud1b5\ud574 \ub9ce\uc740 \uae30\uc5b5 \ud5a5\uc0c1 \uc5d0\uc774\uc804\ud2b8\uac00 MDP(Markov Decision Process)\uc5d0\uc11c\ub9cc \ud14c\uc2a4\ud2b8\ub418\uc5c8\ub2e4\ub294 \uc810\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub294 \ub2e4\uc591\ud55c \ud658\uacbd\uc5d0\uc11c \uc5d0\uc774\uc804\ud2b8\uc758 \uae30\uc5b5 \ub2a5\ub825\uc744 \ud3ec\uad04\uc801\uc73c\ub85c \ud3c9\uac00\ud558\ub294 \uac83\uc774 \uc5bc\ub9c8\ub098 \uc911\uc694\ud55c\uc9c0\ub97c \uac15\uc870\ud569\ub2c8\ub2e4.", "section": "3 \ubc30\uacbd"}]