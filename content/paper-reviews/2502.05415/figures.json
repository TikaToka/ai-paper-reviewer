[{"figure_path": "https://arxiv.org/html/2502.05415/x1.png", "caption": "Figure 1: 512 \u00d7\\times\u00d7 512 images generated by Show-o Turbo given various text prompts. From top to bottom, the images are generated by Show-o Turbo in 8, 4, and 2 sampling steps without reliance on classifier-free guidance\u00a0[20].", "description": "\uadf8\ub9bc 1\uc740 Show-o Turbo \ubaa8\ub378\uc774 \ub2e4\uc591\ud55c \ud14d\uc2a4\ud2b8 \ud504\ub86c\ud504\ud2b8\ub97c \ubc1b\uc544 \uc0dd\uc131\ud55c 512x512 \ud53d\uc140 \uc774\ubbf8\uc9c0\ub4e4\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uc0c1\ub2e8\ubd80\ud130 \ud558\ub2e8\uc73c\ub85c \uc774\ubbf8\uc9c0\ub294 \uac01\uac01 8, 4, 2\uac1c\uc758 \uc0d8\ud50c\ub9c1 \ub2e8\uacc4\ub97c \uac70\uccd0 \uc0dd\uc131\ub418\uc5c8\uc73c\uba70, \ubd84\ub958\uae30 \uc5c6\ub294 \uc548\ub0b4(classifier-free guidance) [20]\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \uc774\ub294 Show-o Turbo \ubaa8\ub378\uc774 \uc801\uc740 \uc0d8\ud50c\ub9c1 \ub2e8\uacc4\ub85c\ub3c4 \uace0\ud488\uc9c8 \uc774\ubbf8\uc9c0 \uc0dd\uc131\uc774 \uac00\ub2a5\ud568\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc8fc\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4.", "section": "1. Introduction"}, {"figure_path": "https://arxiv.org/html/2502.05415/x2.png", "caption": "Figure 2: Illustration of the sampling trajectories of text and image tokens in Show-o.\nAs shown, they both display a denoising pattern.\nIn particular, the trajectory of text generation is yielded by Jacobi Decoding\u00a0[47].\nThe black line denotes the unified abstraction of the multimodal trajectory, and the red lines illustrate the objective of our Show-o Turbo\u2014to map an arbitrary point on the sampling trajectory to the endpoint.\nNote that we omit the trajectory segmentation strategy here for brevity.", "description": "\uadf8\ub9bc 2\ub294 Show-o \ubaa8\ub378\uc5d0\uc11c \ud14d\uc2a4\ud2b8\uc640 \uc774\ubbf8\uc9c0 \ud1a0\ud070\uc758 \uc0d8\ud50c\ub9c1 \uacbd\ub85c\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \ub450 \uacbd\ub85c \ubaa8\ub450 \uc7a1\uc74c \uc81c\uac70 \ud328\ud134\uc744 \ubcf4\uc774\uba70, \ud2b9\ud788 \ud14d\uc2a4\ud2b8 \uc0dd\uc131 \uacbd\ub85c\ub294 Jacobi Decoding [47]\uc744 \ud1b5\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uac80\uc740\uc0c9 \uc120\uc740 \ub2e4\uc911 \ubaa8\ub4dc \uacbd\ub85c\uc758 \ud1b5\ud569\ub41c \ucd94\uc0c1\ud654\ub97c \ub098\ud0c0\ub0b4\uace0, \ube68\uac04\uc0c9 \uc120\uc740 Show-o Turbo\uc758 \ubaa9\ud45c, \uc989 \uc0d8\ud50c\ub9c1 \uacbd\ub85c\uc758 \uc784\uc758 \uc9c0\uc810\uc744 \ucd5c\uc885 \uc9c0\uc810\uc5d0 \ub9e4\ud551\ud558\ub294 \uac83\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.  \uc124\uba85\uc758 \uac04\uacb0\uc131\uc744 \uc704\ud574 \uacbd\ub85c \ubd84\ud560 \uc804\ub7b5\uc740 \uc0dd\ub7b5\ub418\uc5c8\uc2b5\ub2c8\ub2e4.  Show-o Turbo\ub294 \ub2e4\uc911 \ubaa8\ub4dc \uc0d8\ud50c\ub9c1 \uacbd\ub85c\uc758 \ud6a8\uc728\uc131\uc744 \ub192\uc774\uae30 \uc704\ud574 \uc784\uc758\uc758 \uc911\uac04\uc810\uc744 \ucd5c\uc885 \uacb0\uacfc\uc640 \uc77c\uce58\uc2dc\ud0a4\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 Show-o\uc640 Show-o Turbo\uc758 \uc791\ub3d9 \ubc29\uc2dd\uc744 \ube44\uad50\ud558\uc5ec \uc774\ud574\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.", "section": "3. Preliminary: Show-o"}, {"figure_path": "https://arxiv.org/html/2502.05415/x3.png", "caption": "Figure 3: \nThe text sampling trajectory of Show-o Turbo in MMU cases. Show-o Turbo realizes acceleration by predicting multiple successive tokens in one iteration and correctly guessing the later tokens.", "description": "\uadf8\ub9bc 3\uc740 Show-o Turbo\uc758 MMU(\ub2e4\uc911 \ubaa8\ub4dc \uc774\ud574) \uc791\uc5c5\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \uc0d8\ud50c\ub9c1 \uacbd\ub85c\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uae30\uc874\uc758 \ubc29\ubc95\uacfc \ub2ec\ub9ac Show-o Turbo\ub294 \ud55c \ubc88\uc758 \ubc18\ubcf5\uc5d0\uc11c \uc5ec\ub7ec \uac1c\uc758 \uc5f0\uc18d \ud1a0\ud070\uc744 \uc608\uce21\ud558\uace0 \uc774\ud6c4 \ud1a0\ud070\uc744 \uc815\ud655\ud558\uac8c \ucd94\uce21\ud558\uc5ec \uac00\uc18d\ud654\ub97c \ub2ec\uc131\ud569\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 Show-o Turbo\uac00 \ud6a8\uc728\uc801\uc73c\ub85c \uc5ec\ub7ec \ud1a0\ud070\uc744 \ub3d9\uc2dc\uc5d0 \ucc98\ub9ac\ud558\uc5ec \uc0d8\ud50c\ub9c1 \uc18d\ub3c4\ub97c \ub192\uc774\ub294 \uacfc\uc815\uc744 \uc2dc\uac01\uc801\uc73c\ub85c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "5. Experiments"}, {"figure_path": "https://arxiv.org/html/2502.05415/x6.png", "caption": "Figure 4: Comparison between Show-o and Show-o Turbo on 512 resolution in T2I generation. The former crashes in two-step sampling, while the latter maintains good performance.", "description": "\uadf8\ub9bc 4\ub294 \ud14d\uc2a4\ud2b8-\uc774\ubbf8\uc9c0 \uc0dd\uc131(T2I) \uc791\uc5c5\uc5d0\uc11c Show-o\uc640 Show-o Turbo\uc758 512 \ud574\uc0c1\ub3c4 \uc131\ub2a5\uc744 \ube44\uad50\ud55c \uac83\uc785\ub2c8\ub2e4. Show-o\ub294 2\ub2e8\uacc4 \uc0d8\ud50c\ub9c1\uc5d0\uc11c \uc2e4\ud328\ud558\ub294 \ubc18\uba74, Show-o Turbo\ub294 \uc591\ud638\ud55c \uc131\ub2a5\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. \uc774 \uadf8\ub9bc\uc740 Show-o Turbo\uac00 \uae30\uc874 Show-o \ubaa8\ub378\ubcf4\ub2e4 \uc0d8\ud50c\ub9c1 \ub2e8\uacc4\ub97c \uc904\uc774\uba74\uc11c\ub3c4 \uc774\ubbf8\uc9c0 \uc0dd\uc131 \ud488\uc9c8\uc744 \uc720\uc9c0\ud558\ub294 \ud5a5\uc0c1\ub41c \ud6a8\uc728\uc131\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "4. Show-o Turbo"}]