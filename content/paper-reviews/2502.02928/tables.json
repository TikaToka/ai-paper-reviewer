[{"content": "| Method | HumanEval | HumanEval-ET | MBPP | MBPP-ET | BigCodeBench |\n|---|---|---|---|---|---| \n| GPT-4-Preview-1106 |  |  |  |  |  |\n| Direct | 80.1<sup>[2023]</sup> | \u2013 | 81.1<sup>[2024]</sup> | \u2013 | \u2013 |\n| CoT<sup>[2024]</sup> | 89.0 | \u2013 | 82.4 | \u2013 | \u2013 |\n| Self-Planning<sup>[2024]</sup> | 85.4 | \u2013 | 75.8 | \u2013 | \u2013 |\n| AgentCoder<sup>[2024b]</sup><sup>1</sup> | 96.3 | 86.0 | 91.8 | 91.8 | \u2013 |\n| MapCoder<sup>[2024]</sup> | 93.9 | 82.9 | 82.1 | 57.7 | \u2013 |\n| PyCapsule (ours) | **96.5 \u00b1 0.7** | **96.3 \u00b1 1.2** | 88.2 \u00b1 0.3 | 73.0 \u00b1 0.8 | \u2013 |\n| GPT-3.5-Turbo-1106 |  |  |  |  |  |\n| Direct | 48.1<sup>[2024]</sup> | \u2013 | 49.8<sup>[2024]</sup> | \u2013 | \u2013 |\n| Direct (LDB<sup>[2024]</sup>) | 73.8 | \u2013 | 67.6 | \u2013 | \u2013 |\n| CoT<sup>[2024]</sup> | 68.9 | \u2013 | 54.5 | \u2013 | \u2013 |\n| Self-Planning<sup>[2023]</sup> | 60.3 | \u2013 | 55.7 | \u2013 | \u2013 |\n| Reflexion<sup>[2023]</sup> | 67.1 | \u2013 | 73.0 | \u2013 | \u2013 |\n| AgentCoder<sup>[2024b]</sup><sup>1</sup> | 79.9 | 77.4 | **89.9** | **89.1** | \u2013 |\n| MapCoder<sup>[2024]</sup> | 80.5 | 70.1 | 78.3 | 54.4 | \u2013 |\n| LDB<sup>[2024]</sup> | 82.9 | \u2013 | 76.0 | \u2013 | \u2013 |\n| Qwen2.5-Coder-7B-Instruct |  |  |  |  |  |\n| Direct<sup>[2024]</sup> | 88.4 | \u2013 | **83.5** | \u2013 | 41.0 |\n| PyCapsule (ours) | **94.1 \u00b1 1.3** | **93.3 \u00b1 0.6** | 80.7 \u00b1 0.9 | **63.6 \u00b1 0.6** | **65.4 \u00b1 0.8** |\n\n<sup>1</sup>Could not be reproduced during our experiments.", "caption": "Table 1. Success rate comparison on three popular LLMs.\nWe provide the mean value and standard deviation for PyCapsule with three experiment repeats.\nThe results of other methods are from their official reports.", "description": "\ud45c 1\uc740 \uc138 \uac00\uc9c0 \uc778\uae30 \uc788\ub294 \ub300\uaddc\ubaa8 \uc5b8\uc5b4 \ubaa8\ub378(LLM)\uc5d0\uc11c PyCapsule\uc758 \uc131\ub2a5\uc744 \ube44\uad50 \ubd84\uc11d\ud55c \ud45c\uc785\ub2c8\ub2e4. PyCapsule\uc740 \uc81c\uc548\ub41c \uc0c8\ub85c\uc6b4 \ucf54\ub4dc \uc0dd\uc131 \ud504\ub808\uc784\uc6cc\ud06c\uc774\uba70, \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294 \uc138 \uac00\uc9c0 LLM(GPT-4-Preview-1106, GPT-3.5-Turbo-1106, Qwen2.5-Coder-7B-Instruct)\uc744 \uc0ac\uc6a9\ud558\uc5ec HumanEval, HumanEval-ET, MBPP, MBPP-ET, BigCodeBench \ub4f1 \ub2e4\uc12f \uac00\uc9c0 \ubca4\uce58\ub9c8\ud06c \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud55c \uc131\uacf5\ub960\uc744 \uce21\uc815\ud588\uc2b5\ub2c8\ub2e4.  \ud45c\uc5d0\ub294 \uac01 \ubaa8\ub378\uacfc \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc131\uacf5\ub960\uacfc \ud45c\uc900 \ud3b8\ucc28\uac00 \uc81c\uc2dc\ub418\uc5b4 \uc788\uc73c\uba70, PyCapsule\uc758 \uacb0\uacfc\ub294 \uc138 \ubc88\uc758 \ubc18\ubcf5 \uc2e4\ud5d8\uc758 \ud3c9\uade0\uac12\uacfc \ud45c\uc900 \ud3b8\ucc28\ub85c \ud45c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.  \ub2e4\ub978 \ubc29\ubc95\ub4e4\uc758 \uacb0\uacfc\ub294 \ud574\ub2f9 \ub17c\ubb38\uc758 \uacf5\uc2dd \ubcf4\uace0\uc11c\uc5d0\uc11c \uac00\uc838\uc654\uc2b5\ub2c8\ub2e4.  \uc774 \ud45c\ub294 PyCapsule\uc758 \uc131\ub2a5\uc744 \uae30\uc874\uc758 \ub2e4\ub978 \ubc29\ubc95\ub4e4\uacfc \ube44\uad50\ud558\uc5ec PyCapsule\uc758 \ud6a8\uc728\uc131\uacfc \uc815\ud655\uc131\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "4 Results and Analysis"}, {"content": "GPT-4-Preview-1106 | HumanEval | HumanEval-ET | MBPP | MBPP-ET | BigCodeBench\n---|---|---|---|---|---\n0 | 92.0 \u00b1 1.4 | 88.0 \u00b1 3.7 | 70.6 \u00b1 1.0 | 67.5 \u00b1 0.8 | -\n1 | 3.8 \u00b1 0.7 | 8.2 \u00b1 4.3 | 18.0 \u00b1 1.1 | 17.2 \u00b1 1.6 | -\n2 | 1.9 \u00b1 1.1 | 2.3 \u00b1 1.4 | 5.9 \u00b1 1.5 | 8.6 \u00b1 0.5 | -\n3 | 1.1 \u00b1 0.4 | 0.8 \u00b1 0.4 | 3.0 \u00b1 0.3 | 3.2 \u00b1 0.3 | -\n4 | 1.1 \u00b1 0.7 | 0.6 \u00b1 0.0 | 1.4 \u00b1 0.5 | 1.9 \u00b1 0.2 | -\n5 | 0.2 \u00b1 0.4 | 0.0 \u00b1 0.0 | 1.2 \u00b1 0.4 | 1.6 \u00b1 0.2 | -\nGPT-3.5-Turbo-1106 | HumanEval | HumanEval-ET | MBPP | MBPP-ET | BigCodeBench\n---|---|---|---|---|---\n0 | 81.9 \u00b1 0.6 | 77.2 \u00b1 1.5 | 74.6 \u00b1 1.8 | 70.3 \u00b1 1.3 | -\n1 | 9.7 \u00b1 0.3 | 13.2 \u00b1 0.4 | 15.1 \u00b1 0.9 | 16.2 \u00b1 0.2 | -\n2 | 4.0 \u00b1 0.4 | 5.3 \u00b1 3.0 | 5.2 \u00b1 0.7 | 6.6 \u00b1 1.5 | -\n3 | 1.2 \u00b1 0.8 | 1.9 \u00b1 1.1 | 2.6 \u00b1 0.5 | 3.3 \u00b1 0.1 | -\n4 | 2.1 \u00b1 0.0 | 1.4 \u00b1 0.7 | 1.3 \u00b1 0.4 | 2.0 \u00b1 0.1 | -\n5 | 1.0 \u00b1 0.4 | 1.0 \u00b1 1.1 | 1.3 \u00b1 0.8 | 1.5 \u00b1 0.2 | -\nQwen2.5-Coder-7B-Instruct | HumanEval | HumanEval-ET | MBPP | MBPP-ET | BigCodeBench\n---|---|---|---|---|---\n0 | 79.3 \u00b1 1.4 | 81.3 \u00b1 0.4 | 60.9 \u00b1 0.7 | 59.7 \u00b1 1.2 | 67.2 \u00b1 0.9\n1 | 14.9 \u00b1 2.5 | 13.1 \u00b1 2.0 | 22.4 \u00b1 0.4 | 21.6 \u00b1 0.7 | 14.9 \u00b1 0.9\n2 | 2.6 \u00b1 0.7 | 2.2 \u00b1 0.8 | 7.5 \u00b1 0.2 | 8.7 \u00b1 0.4 | 7.1 \u00b1 0.5\n3 | 1.5 \u00b1 0.4 | 1.7 \u00b1 1.0 | 4.5 \u00b1 0.5 | 5.0 \u00b1 0.3 | 4.7 \u00b1 0.8\n4 | 0.6 \u00b1 0.6 | 1.5 \u00b1 0.7 | 2.9 \u00b1 0.3 | 2.9 \u00b1 0.3 | 3.4 \u00b1 0.7\n5 | 1.1 \u00b1 1.0 | 0.2 \u00b1 0.4 | 1.8 \u00b1 0.3 | 2.2 \u00b1 0.5 | 2.7 \u00b1 0.2", "caption": "Table 2. Accuracy of PyCapsule framework across code generation and debugging attempts (0\u20135) for OpenAI GPT-4-Preview-1106, GPT-3.5-Turbo-1106 and Qwen 2.5 Coder Instruct. Attempt 0 represents the initial solution generated by the Programmer agent, while subsequent attempts (1\u20135) indicate iterative fixes during the debugging process. The table reports accuracy with associated sample standard deviation (\u00b1splus-or-minus\ud835\udc60\\pm s\u00b1 italic_s). The results also showcase the incremental improvement achieved through PyCapsule\u2019s iterative feedback mechanism.", "description": "\ud45c 2\ub294 PyCapsule \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ucf54\ub4dc \uc0dd\uc131 \ubc0f \ub514\ubc84\uae45 \uc2dc\ub3c4(0~5\ud68c)\uc5d0 \ub300\ud55c \uc815\ud655\ub3c4\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 OpenAI GPT-4-Preview-1106, GPT-3.5-Turbo-1106 \ubc0f Qwen 2.5 Coder Instruct \ubaa8\ub378\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. 0\ud68c \uc2dc\ub3c4\ub294 \ud504\ub85c\uadf8\ub798\uba38 \uc5d0\uc774\uc804\ud2b8\uac00 \uc0dd\uc131\ud55c \ucd08\uae30 \uc194\ub8e8\uc158\uc744 \ub098\ud0c0\ub0b4\uace0, \uadf8 \uc774\ud6c4 \uc2dc\ub3c4(1~5\ud68c)\ub294 \ub514\ubc84\uae45 \uacfc\uc815\uc5d0\uc11c \ubc18\ubcf5\uc801\uc778 \uc218\uc815\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ud45c\uc5d0\ub294 \ud45c\ubcf8 \ud45c\uc900 \ud3b8\ucc28(\u00b1s)\uac00 \ud3ec\ud568\ub41c \uc815\ud655\ub3c4\uac00 \ubcf4\uace0\ub429\ub2c8\ub2e4. \ub610\ud55c \uacb0\uacfc\ub294 PyCapsule\uc758 \ubc18\ubcf5\uc801\uc778 \ud53c\ub4dc\ubc31 \uba54\ucee4\ub2c8\uc998\uc744 \ud1b5\ud574 \ub2ec\uc131\ub41c \uc99d\ubd84\uc2dd \uac1c\uc120\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "section": "4.2 \uacb0\uacfc \ubc0f \ubd84\uc11d"}]